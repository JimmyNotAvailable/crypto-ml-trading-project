version: '3.8'
services:
  # ðŸš€ UNIFIED SERVICE - Single container running both bot and web
  unified:
    build: .
    container_name: crypto_unified
    env_file:
      - .env.example
    environment:
      - SERVICE=unified
      - WEB_PORT=${WEB_PORT:-8000}
      - BOT_TOKEN=${BOT_TOKEN}
    volumes:
      - ./:/app
      - ./token.txt:/app/token.txt:ro  # Mount bot token file
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      - mongo
    restart: unless-stopped

  # ðŸ”§ LEGACY SERVICES (for individual testing)
  web:
    build: .
    container_name: crypto_web
    env_file:
      - .env.example
    environment:
      - SERVICE=web
      - WEB_PORT=${WEB_PORT:-8000}
    volumes:
      - ./:/app
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      - mongo
    profiles: ["legacy"]

  bot:
    build: .
    container_name: crypto_bot
    env_file:
      - .env.example
    environment:
      - SERVICE=bot
      - BOT_TOKEN=${BOT_TOKEN}
    volumes:
      - ./:/app
      - ./token.txt:/app/token.txt:ro
    depends_on:
      - mongo
    profiles: ["legacy"]

  demo:
    build: .
    container_name: crypto_demo
    env_file:
      - .env.example
    environment:
      - SERVICE=demo
      - WEB_PORT=${WEB_PORT:-8000}
      - BOT_TOKEN=${BOT_TOKEN}
      - DASHBOARD=1
    volumes:
      - ./:/app
      - ./token.txt:/app/token.txt:ro
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      - mongo
    profiles: ["legacy"]

  mongo:
    image: mongo:latest
    container_name: crypto_mongo
    ports:
      - "27017:27017"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
